/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cgg.arielgeometryroseviewer;

import com.bluewalrus.PSegment;
import com.bluewalrus.PieChart;
import com.bluewalrus.Segment;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JPanel;

/**
 *
 * @author jgrimsdale
 */
public class ArielGeometryRosePlot extends JPanel {

    /**
     * Creates new form ArielGeometryRosePlot
     */
    public ArielGeometryRosePlot() {
        initComponents();
        System.out.println("ArielGeometryRosePlot Plot");
        plot();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    private void plot() {
        ArrayList<Segment> values = new ArrayList<>();
        values.add(new PSegment(0, (PSegment)null, 15.0f, "music", Color.RED));
        values.add(new PSegment(0, (PSegment)null, 52.0f, "photos", Color.BLUE));
        values.add(new PSegment(0, (PSegment)null, 33.0f, "applications", Color.GREEN));
 
        Color c;
        PSegment s0 = (PSegment) values.get(0);
        PSegment s1 = (PSegment) values.get(1);
        PSegment s2 = (PSegment) values.get(2);
 
        {
            c = s0.getColor();
            s0.getChildren().add(new PSegment(1, s0, 80.0f, "jazz", darken(c)));
            s0.getChildren().add(new PSegment(1, s0, 7.0f, "rock", darken(darken(c))));
            s0.getChildren().add(new PSegment(1, s0, 13.0f, "classical", darken(darken(darken(c)))));
        }
        {
            c = Color.cyan;
            s1.getChildren().add(new PSegment(1, s1, 80.0f, "holiday snaps", darken(c)));
            s1.getChildren().add(new PSegment(1, s1, 7.0f, "weddings", darken(darken(c))));
            s1.getChildren().add(new PSegment(1, s1, 13.0f, "baby", darken(darken(darken(c)))));
        }
        {
            c = Color.YELLOW;
            s2.getChildren().add(new PSegment(1, s2, 80.0f, "Windows", darken(c)));
            s2.getChildren().add(new PSegment(1, s2, 7.0f, "Favourites", darken(darken(c))));
            s2.getChildren().add(new PSegment(1, s2, 13.0f, "Database", darken(darken(darken(c)))));
        }
        PSegment s20 = (PSegment)s2.getChildren().get(0);
        {
            c = Color.PINK;
            s20.getChildren().add(new PSegment(2, s20, 50.0f, "Office", darken(c)));
            s20.getChildren().add(new PSegment(2, s20, 7.0f, "Visio", darken(darken(c))));
            s20.getChildren().add(new PSegment(2, s20, 43.0f, "Paint", darken(darken(darken(c)))));
        }
        PSegment s22 = (PSegment)s2.getChildren().get(2);
        {
            c = Color.WHITE;
            s22.getChildren().add(new PSegment(2, s22, 50.0f, "Oracle", darken(c)));
            s22.getChildren().add(new PSegment(2, s22, 50.0f, "Access", darken(darken(c))));
        }
 
        PSegment s200 = (PSegment)s20.getChildren().get(0);
        {
            c = Color.ORANGE;
            s200.getChildren().add(new PSegment(3, s200, 10.0, "Word", darken(c)));
            s200.getChildren().add(new PSegment(3, s200, 80.0, "Excel", darken(darken(c))));
            s200.getChildren().add(new PSegment(3, s200, 5.0, "Access", darken(darken(darken(c)))));
            s200.getChildren().add(new PSegment(3, s200, 5.0, "Powerpoint", darken(darken(darken(darken(c))))));
        }
 
        PSegment s10 = (PSegment)s1.getChildren().get(0);
        {
            c = Color.white;
            s10.getChildren().add(new PSegment(2, s10, 30.0, "Rome", darken(c)));
            s10.getChildren().add(new PSegment(2, s10, 20.0, "Paris", darken(darken(c))));
            s10.getChildren().add(new PSegment(2, s10, 10.0, "London", darken(darken(darken(c)))));
            s10.getChildren().add(new PSegment(2, s10, 10.0, "Beach", darken(darken(darken(darken(c))))));
            s10.getChildren().add(new PSegment(2, s10, 30.0, "China", darken(darken(darken(darken(c))))));
        }
 
        PieChart pieChart = new PieChart(values);
        add(pieChart);
        setVisible(true);
        System.out.println("end of plot routine");
    }
    
    private Color darken(Color c) {
        return c.darker();
    }
    
//    public class Segment {
// 
//        double startAngle;//starting angle (calculated)
//        double angle; // from magnitude (calculated)
//
//        Color color; //color (supplied by user)
//        int level; //level 0 = first level pie chart (supplied by user)
//        Segment parent; //parent segment (supplied by user)
//        float magnitude; //percent (supplied by user)
//        String name; //name of segment (supplied by user)
//
//        Area area; //geometric shaped (calculated)
//        Point midpoint; //a calculated midpoint that determines where the text should be drawn (calculated)
//
//        private Segment(int level, Segment parent, float magnitude, String name, Color color) {
//            this.level = level;
//            this.parent = (Segment)parent;
//            this.magnitude = magnitude;
//            this.name = name;
//            this.color = color;
//        }
//    }
    
}
