/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cgg.arielplot;

import com.cgg.arielgeometrycurrents.TideModel;
import java.awt.BorderLayout;
import java.util.Collection;
import javax.swing.JScrollPane;
import org.apache.commons.math3.complex.Complex;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.LookupEvent;
import org.openide.util.LookupListener;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.lookup.AbstractLookup;
import org.openide.util.lookup.InstanceContent;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//com.cgg.arielplot//ArielPlot//EN",
        autostore = false)
@TopComponent.Description(
        preferredID = "ArielPlotTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "com.cgg.arielplot.ArielPlotTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_ArielPlotAction",
        preferredID = "ArielPlotTopComponent")
@Messages({
    "CTL_ArielPlotAction=ArielPlot",
    "CTL_ArielPlotTopComponent=ArielPlot Window",
    "HINT_ArielPlotTopComponent=This is a ArielPlot window"
})

public final class ArielPlotTopComponent extends TopComponent implements LookupListener{

    private TideModel tidemodel;
    private InstanceContent content;
    private org.openide.util.Lookup.Result<TideModel> result;
    private PlotJPanel chartpanel;
    private boolean debug = true;

    public ArielPlotTopComponent() {
        initComponents();
        setName(Bundle.CTL_ArielPlotTopComponent());
        setToolTipText(Bundle.HINT_ArielPlotTopComponent());
        content = new InstanceContent();
        associateLookup(new AbstractLookup(content));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
 
    @Override
    public void componentOpened() {
        result = org.openide.util.Utilities.actionsGlobalContext().lookupResult(TideModel.class);
        result.addLookupListener(this);
        System.out.println("Plot window opened");
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    @Override
    protected void componentShowing() {
        super.componentShowing();
        System.out.println("Plot Window Showing");

    }

    @Override
    protected void componentHidden() {
        super.componentHidden();
        System.out.println("Plot Window Hidden");
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    public void resultChanged(LookupEvent le) {
        Collection<? extends TideModel> alltidemodels = result.allInstances();
        if (debug) {
            System.out.println("PlotTopComponent.resultChanged");
        }
        for (TideModel tm : alltidemodels) {
            System.out.println("TideModel");
            PlotJPanel pjp = new PlotJPanel("title", tm);
            JScrollPane scrollPane = new JScrollPane(pjp);
            this.setLayout(new BorderLayout());
            this.add(scrollPane);
            Complex[] fftresult = tm.fftresult;
            double[][] data = new double[2][fftresult.length];
            for(int i = 0; i < fftresult.length; i++) {
                data[0][i] = i;
                data[1][i] = fftresult[i].abs();
            }
            pjp.drawXYLineChart(data);
        }
    }
}
